/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE ACCEL_PID_TUNING PACKING
package com.MAVLink.MAVLink.common;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* Steering acceleration infomation.
*/
public class msg_accel_pid_tuning extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_ACCEL_PID_TUNING = 59;
    public static final int MAVLINK_MSG_LENGTH = 32;
    private static final long serialVersionUID = MAVLINK_MSG_ID_ACCEL_PID_TUNING;


      
    /**
    * Timestamp (microseconds since UNIX epoch or microseconds since system boot)
    */
    public long time_usec;
      
    /**
    * expected lateral acceleration
    */
    public float expected_accel;
      
    /**
    * achieved lateral acceleration
    */
    public float achieved_accel;
      
    /**
    * P in last_out
    */
    public float P;
      
    /**
    * I in last_out
    */
    public float I;
      
    /**
    * D in last_out
    */
    public float D;
      
    /**
    * last_out
    */
    public float last_out;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_ACCEL_PID_TUNING;
              
        packet.payload.putUnsignedLong(time_usec);
              
        packet.payload.putFloat(expected_accel);
              
        packet.payload.putFloat(achieved_accel);
              
        packet.payload.putFloat(P);
              
        packet.payload.putFloat(I);
              
        packet.payload.putFloat(D);
              
        packet.payload.putFloat(last_out);
        
        return packet;
    }

    /**
    * Decode a accel_pid_tuning message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.time_usec = payload.getUnsignedLong();
              
        this.expected_accel = payload.getFloat();
              
        this.achieved_accel = payload.getFloat();
              
        this.P = payload.getFloat();
              
        this.I = payload.getFloat();
              
        this.D = payload.getFloat();
              
        this.last_out = payload.getFloat();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_accel_pid_tuning(){
        msgid = MAVLINK_MSG_ID_ACCEL_PID_TUNING;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_accel_pid_tuning(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_ACCEL_PID_TUNING;
        unpack(mavLinkPacket.payload);        
    }

                  
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_ACCEL_PID_TUNING -"+" time_usec:"+time_usec+" expected_accel:"+expected_accel+" achieved_accel:"+achieved_accel+" P:"+P+" I:"+I+" D:"+D+" last_out:"+last_out+"";
    }
}
        