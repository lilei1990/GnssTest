/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE SINGLE_ANTENNA_TEST PACKING
package com.MAVLink.MAVLink.common;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* test single antenna.
*/
public class msg_single_antenna_test extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_SINGLE_ANTENNA_TEST = 52;
    public static final int MAVLINK_MSG_LENGTH = 42;
    private static final long serialVersionUID = MAVLINK_MSG_ID_SINGLE_ANTENNA_TEST;


      
    /**
    * Timestamp (milliseconds since system boot)
    */
    public long time_boot_ms;
      
    /**
    * single antenna heading yaw angle in degrees * 100, 0.0..359.99 degrees.
    */
    public int single_yaw;
      
    /**
    * double antenna heading yaw angle in degrees * 100, 0.0..359.99 degrees.
    */
    public int double_yaw;
      
    /**
    * ekf heading yaw angle in degrees * 100, 0.0..359.99 degrees.
    */
    public int ekf_yaw;
      
    /**
    * gyro rms in 3s
    */
    public float rms1;
      
    /**
    * 
    */
    public float rms2;
      
    /**
    * 
    */
    public float rms3;
      
    /**
    * 
    */
    public float rms4;
      
    /**
    * 
    */
    public float rms5;
      
    /**
    * 
    */
    public float rms6;
      
    /**
    * Ground Speed, expressed as m/s * 100
    */
    public short spd;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_SINGLE_ANTENNA_TEST;
              
        packet.payload.putUnsignedInt(time_boot_ms);
              
        packet.payload.putInt(single_yaw);
              
        packet.payload.putInt(double_yaw);
              
        packet.payload.putInt(ekf_yaw);
              
        packet.payload.putFloat(rms1);
              
        packet.payload.putFloat(rms2);
              
        packet.payload.putFloat(rms3);
              
        packet.payload.putFloat(rms4);
              
        packet.payload.putFloat(rms5);
              
        packet.payload.putFloat(rms6);
              
        packet.payload.putShort(spd);
        
        return packet;
    }

    /**
    * Decode a single_antenna_test message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.time_boot_ms = payload.getUnsignedInt();
              
        this.single_yaw = payload.getInt();
              
        this.double_yaw = payload.getInt();
              
        this.ekf_yaw = payload.getInt();
              
        this.rms1 = payload.getFloat();
              
        this.rms2 = payload.getFloat();
              
        this.rms3 = payload.getFloat();
              
        this.rms4 = payload.getFloat();
              
        this.rms5 = payload.getFloat();
              
        this.rms6 = payload.getFloat();
              
        this.spd = payload.getShort();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_single_antenna_test(){
        msgid = MAVLINK_MSG_ID_SINGLE_ANTENNA_TEST;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_single_antenna_test(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_SINGLE_ANTENNA_TEST;
        unpack(mavLinkPacket.payload);        
    }

                          
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_SINGLE_ANTENNA_TEST -"+" time_boot_ms:"+time_boot_ms+" single_yaw:"+single_yaw+" double_yaw:"+double_yaw+" ekf_yaw:"+ekf_yaw+" rms1:"+rms1+" rms2:"+rms2+" rms3:"+rms3+" rms4:"+rms4+" rms5:"+rms5+" rms6:"+rms6+" spd:"+spd+"";
    }
}
        