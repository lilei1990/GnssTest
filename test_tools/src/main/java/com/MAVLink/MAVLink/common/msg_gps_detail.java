/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE GPS_DETAIL PACKING
package com.MAVLink.MAVLink.common;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* GPS DETAIL.
*/
public class msg_gps_detail extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_GPS_DETAIL = 15;
    public static final int MAVLINK_MSG_LENGTH = 68;
    private static final long serialVersionUID = MAVLINK_MSG_ID_GPS_DETAIL;


      
    /**
    * reserved.
    */
    public long time;
      
    /**
    * reserved.
    */
    public long time2;
      
    /**
    * reserved.
    */
    public int lat;
      
    /**
    * reserved.
    */
    public int lng;
      
    /**
    * reserved.
    */
    public int alt;
      
    /**
    * reserved.
    */
    public float ground_speed;
      
    /**
    * reserved.
    */
    public float single_course;
      
    /**
    * reserved.
    */
    public float double_course;
      
    /**
    * reserved.
    */
    public float roll;
      
    /**
    * reserved.
    */
    public float ekf_yaw;
      
    /**
    * reserved.
    */
    public float ekf_roll;
      
    /**
    * reserved.
    */
    public float ekf_pitch;
      
    /**
    * reserved.
    */
    public float double_course2;
      
    /**
    * reserved.
    */
    public float roll2;
      
    /**
    * reserved.
    */
    public int hdop;
      
    /**
    * reserved.
    */
    public short type;
      
    /**
    * reserved.
    */
    public short num_sats;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_GPS_DETAIL;
              
        packet.payload.putUnsignedLong(time);
              
        packet.payload.putUnsignedLong(time2);
              
        packet.payload.putInt(lat);
              
        packet.payload.putInt(lng);
              
        packet.payload.putInt(alt);
              
        packet.payload.putFloat(ground_speed);
              
        packet.payload.putFloat(single_course);
              
        packet.payload.putFloat(double_course);
              
        packet.payload.putFloat(roll);
              
        packet.payload.putFloat(ekf_yaw);
              
        packet.payload.putFloat(ekf_roll);
              
        packet.payload.putFloat(ekf_pitch);
              
        packet.payload.putFloat(double_course2);
              
        packet.payload.putFloat(roll2);
              
        packet.payload.putUnsignedShort(hdop);
              
        packet.payload.putUnsignedByte(type);
              
        packet.payload.putUnsignedByte(num_sats);
        
        return packet;
    }

    /**
    * Decode a gps_detail message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.time = payload.getUnsignedLong();
              
        this.time2 = payload.getUnsignedLong();
              
        this.lat = payload.getInt();
              
        this.lng = payload.getInt();
              
        this.alt = payload.getInt();
              
        this.ground_speed = payload.getFloat();
              
        this.single_course = payload.getFloat();
              
        this.double_course = payload.getFloat();
              
        this.roll = payload.getFloat();
              
        this.ekf_yaw = payload.getFloat();
              
        this.ekf_roll = payload.getFloat();
              
        this.ekf_pitch = payload.getFloat();
              
        this.double_course2 = payload.getFloat();
              
        this.roll2 = payload.getFloat();
              
        this.hdop = payload.getUnsignedShort();
              
        this.type = payload.getUnsignedByte();
              
        this.num_sats = payload.getUnsignedByte();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_gps_detail(){
        msgid = MAVLINK_MSG_ID_GPS_DETAIL;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_gps_detail(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_GPS_DETAIL;
        unpack(mavLinkPacket.payload);        
    }

                                      
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_GPS_DETAIL -"+" time:"+time+" time2:"+time2+" lat:"+lat+" lng:"+lng+" alt:"+alt+" ground_speed:"+ground_speed+" single_course:"+single_course+" double_course:"+double_course+" roll:"+roll+" ekf_yaw:"+ekf_yaw+" ekf_roll:"+ekf_roll+" ekf_pitch:"+ekf_pitch+" double_course2:"+double_course2+" roll2:"+roll2+" hdop:"+hdop+" type:"+type+" num_sats:"+num_sats+"";
    }
}
        