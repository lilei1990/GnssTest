/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE COMMAND_ACK_PARAMS PACKING
package com.MAVLink.MAVLink.common;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* Report status of a command. Includes feedback whether the command was executed.
*/
public class msg_command_ack_params extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_COMMAND_ACK_PARAMS = 78;
    public static final int MAVLINK_MSG_LENGTH = 31;
    private static final long serialVersionUID = MAVLINK_MSG_ID_COMMAND_ACK_PARAMS;


      
    /**
    * Parameter 1, as defined by MAV_CMD enum.
    */
    public float param1;
      
    /**
    * Parameter 2, as defined by MAV_CMD enum.
    */
    public float param2;
      
    /**
    * Parameter 3, as defined by MAV_CMD enum.
    */
    public float param3;
      
    /**
    * Parameter 4, as defined by MAV_CMD enum.
    */
    public float param4;
      
    /**
    * Parameter 5, as defined by MAV_CMD enum.
    */
    public float param5;
      
    /**
    * Parameter 6, as defined by MAV_CMD enum.
    */
    public float param6;
      
    /**
    * Parameter 7, as defined by MAV_CMD enum.
    */
    public float param7;
      
    /**
    * Command ID, as defined by MAV_CMD enum.
    */
    public int command;
      
    /**
    * See MAV_RESULT enum
    */
    public short result;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_COMMAND_ACK_PARAMS;
              
        packet.payload.putFloat(param1);
              
        packet.payload.putFloat(param2);
              
        packet.payload.putFloat(param3);
              
        packet.payload.putFloat(param4);
              
        packet.payload.putFloat(param5);
              
        packet.payload.putFloat(param6);
              
        packet.payload.putFloat(param7);
              
        packet.payload.putUnsignedShort(command);
              
        packet.payload.putUnsignedByte(result);
        
        return packet;
    }

    /**
    * Decode a command_ack_params message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.param1 = payload.getFloat();
              
        this.param2 = payload.getFloat();
              
        this.param3 = payload.getFloat();
              
        this.param4 = payload.getFloat();
              
        this.param5 = payload.getFloat();
              
        this.param6 = payload.getFloat();
              
        this.param7 = payload.getFloat();
              
        this.command = payload.getUnsignedShort();
              
        this.result = payload.getUnsignedByte();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_command_ack_params(){
        msgid = MAVLINK_MSG_ID_COMMAND_ACK_PARAMS;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_command_ack_params(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_COMMAND_ACK_PARAMS;
        unpack(mavLinkPacket.payload);        
    }

                      
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_COMMAND_ACK_PARAMS -"+" param1:"+param1+" param2:"+param2+" param3:"+param3+" param4:"+param4+" param5:"+param5+" param6:"+param6+" param7:"+param7+" command:"+command+" result:"+result+"";
    }
}
        