/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE LOG_EKF2 PACKING
package com.MAVLink.MAVLink.common;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* ekf1
*/
public class msg_log_ekf2 extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_LOG_EKF2 = 161;
    public static final int MAVLINK_MSG_LENGTH = 15;
    private static final long serialVersionUID = MAVLINK_MSG_ID_LOG_EKF2;


      
    /**
    * a
    */
    public long time_us;
      
    /**
    * a
    */
    public short scaleX;
      
    /**
    * a
    */
    public short scaleY;
      
    /**
    * a
    */
    public short scaleZ;
      
    /**
    * a
    */
    public byte AZbias;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_LOG_EKF2;
              
        packet.payload.putUnsignedLong(time_us);
              
        packet.payload.putShort(scaleX);
              
        packet.payload.putShort(scaleY);
              
        packet.payload.putShort(scaleZ);
              
        packet.payload.putByte(AZbias);
        
        return packet;
    }

    /**
    * Decode a log_ekf2 message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.time_us = payload.getUnsignedLong();
              
        this.scaleX = payload.getShort();
              
        this.scaleY = payload.getShort();
              
        this.scaleZ = payload.getShort();
              
        this.AZbias = payload.getByte();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_log_ekf2(){
        msgid = MAVLINK_MSG_ID_LOG_EKF2;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_log_ekf2(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_LOG_EKF2;
        unpack(mavLinkPacket.payload);        
    }

              
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_LOG_EKF2 -"+" time_us:"+time_us+" scaleX:"+scaleX+" scaleY:"+scaleY+" scaleZ:"+scaleZ+" AZbias:"+AZbias+"";
    }
}
        