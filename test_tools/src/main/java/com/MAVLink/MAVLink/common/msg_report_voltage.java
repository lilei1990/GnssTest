/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE REPORT_VOLTAGE PACKING
package com.MAVLink.MAVLink.common;

import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;

/**
 * report voltage of kinds of sensor.
 */
public class msg_report_voltage extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_REPORT_VOLTAGE = 3;
    public static final int MAVLINK_MSG_LENGTH = 60;
    private static final long serialVersionUID = MAVLINK_MSG_ID_REPORT_VOLTAGE;


    /**
     * voltage of battery
     */
    public float battery;

    /**
     * 最低电压值
     */
    public float battery_min;

    /**
     * voltage of 12v
     */
    public float primary_regulator;

    /**
     * voltage of terminal
     */
    public float terminal;

    /**
     * voltage of gps
     */
    public float gps;

    /**
     * voltage of angle
     */
    public float angle;

    /**
     * voltage of core 5v
     */
    public float core5;

    /**
     * voltage of angle adc
     */
    public float angle_adc;

    /**
     * voltage of core 3.3v
     */
    public float core33;

    /**
     * voltage of imu
     */
    public float imu;

    /**
     * voltage of k80
     */
    public float k80;

    /**
     * voltage of valve work
     */
    public float valve_work;

    /**
     * voltage of valve left
     */
    public float valve_left;

    /**
     * voltage of valve right
     */
    public float valve_right;

    /**
     * voltage of pressure
     */
    public float pressure;

    /**
     * voltage of angle value
     */
    public float angle_value;


    /**
     * Generates the payload for a mavlink message for a message of this type
     *
     * @return
     */
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_REPORT_VOLTAGE;

        packet.payload.putFloat(battery);

        packet.payload.putFloat(primary_regulator);

        packet.payload.putFloat(terminal);

        packet.payload.putFloat(gps);

        packet.payload.putFloat(angle);

        packet.payload.putFloat(core5);

        packet.payload.putFloat(angle_adc);

        packet.payload.putFloat(core33);

        packet.payload.putFloat(imu);

        packet.payload.putFloat(k80);

        packet.payload.putFloat(valve_work);

        packet.payload.putFloat(valve_left);

        packet.payload.putFloat(valve_right);

        packet.payload.putFloat(pressure);

        packet.payload.putFloat(angle_value);

        return packet;
    }

    /**
     * Decode a report_voltage message into this class fields
     *
     * @param payload The message to decode
     */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.battery = payload.getFloat();

        this.primary_regulator = payload.getFloat();

        this.terminal = payload.getFloat();

        this.gps = payload.getFloat();

        this.angle = payload.getFloat();

        this.core5 = payload.getFloat();

        this.angle_adc = payload.getFloat();

        this.core33 = payload.getFloat();

        this.imu = payload.getFloat();

        this.k80 = payload.getFloat();

        this.valve_work = payload.getFloat();

        this.valve_left = payload.getFloat();

        this.valve_right = payload.getFloat();

        this.pressure = payload.getFloat();

        this.angle_value = payload.getFloat();

    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_report_voltage() {
        msgid = MAVLINK_MSG_ID_REPORT_VOLTAGE;
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     */
    public msg_report_voltage(MAVLinkPacket mavLinkPacket) {
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_REPORT_VOLTAGE;
        unpack(mavLinkPacket.payload);
    }


    /**
     * Returns a string with the MSG name and data
     */
    public String toString() {
        return "MAVLINK_MSG_ID_REPORT_VOLTAGE -" + " battery:" + battery + " primary_regulator:" + primary_regulator + " terminal:" + terminal + " gps:" + gps + " angle:" + angle + " core5:" + core5 + " angle_adc:" + angle_adc + " core33:" + core33 + " imu:" + imu + " k80:" + k80 + " valve_work:" + valve_work + " valve_left:" + valve_left + " valve_right:" + valve_right + " pressure:" + pressure + " angle_value:" + angle_value + "";
    }
}
        