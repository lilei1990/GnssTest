/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE MOTOR_STATUS PACKING
package com.MAVLink.MAVLink.common;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* Motor status.
*/
public class msg_motor_status extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_MOTOR_STATUS = 17;
    public static final int MAVLINK_MSG_LENGTH = 68;
    private static final long serialVersionUID = MAVLINK_MSG_ID_MOTOR_STATUS;


      
    /**
    * UDcBus
    */
    public float UDcBus;
      
    /**
    * IDcBus
    */
    public float IDcBus;
      
    /**
    * speed_cmd
    */
    public float speed_cmd;
      
    /**
    * speed
    */
    public float speed;
      
    /**
    * reserved
    */
    public int irsv1;
      
    /**
    * reserved
    */
    public int irsv2;
      
    /**
    * reserved
    */
    public int irsv3;
      
    /**
    * reserved
    */
    public int irsv4;
      
    /**
    * reserved
    */
    public float frsv1;
      
    /**
    * reserved
    */
    public float frsv2;
      
    /**
    * reserved
    */
    public float frsv3;
      
    /**
    * reserved
    */
    public float frsv4;
      
    /**
    * reserved
    */
    public float frsv5;
      
    /**
    * reserved
    */
    public float frsv6;
      
    /**
    * reserved
    */
    public float frsv7;
      
    /**
    * reserved
    */
    public float frsv8;
      
    /**
    * linked
    */
    public short linked;
      
    /**
    * eState
    */
    public short eState;
      
    /**
    * fault_captured
    */
    public short fault;
      
    /**
    * temp and vdc alarm
    */
    public short alarm;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_MOTOR_STATUS;
              
        packet.payload.putFloat(UDcBus);
              
        packet.payload.putFloat(IDcBus);
              
        packet.payload.putFloat(speed_cmd);
              
        packet.payload.putFloat(speed);
              
        packet.payload.putInt(irsv1);
              
        packet.payload.putInt(irsv2);
              
        packet.payload.putInt(irsv3);
              
        packet.payload.putInt(irsv4);
              
        packet.payload.putFloat(frsv1);
              
        packet.payload.putFloat(frsv2);
              
        packet.payload.putFloat(frsv3);
              
        packet.payload.putFloat(frsv4);
              
        packet.payload.putFloat(frsv5);
              
        packet.payload.putFloat(frsv6);
              
        packet.payload.putFloat(frsv7);
              
        packet.payload.putFloat(frsv8);
              
        packet.payload.putUnsignedByte(linked);
              
        packet.payload.putUnsignedByte(eState);
              
        packet.payload.putUnsignedByte(fault);
              
        packet.payload.putUnsignedByte(alarm);
        
        return packet;
    }

    /**
    * Decode a motor_status message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.UDcBus = payload.getFloat();
              
        this.IDcBus = payload.getFloat();
              
        this.speed_cmd = payload.getFloat();
              
        this.speed = payload.getFloat();
              
        this.irsv1 = payload.getInt();
              
        this.irsv2 = payload.getInt();
              
        this.irsv3 = payload.getInt();
              
        this.irsv4 = payload.getInt();
              
        this.frsv1 = payload.getFloat();
              
        this.frsv2 = payload.getFloat();
              
        this.frsv3 = payload.getFloat();
              
        this.frsv4 = payload.getFloat();
              
        this.frsv5 = payload.getFloat();
              
        this.frsv6 = payload.getFloat();
              
        this.frsv7 = payload.getFloat();
              
        this.frsv8 = payload.getFloat();
              
        this.linked = payload.getUnsignedByte();
              
        this.eState = payload.getUnsignedByte();
              
        this.fault = payload.getUnsignedByte();
              
        this.alarm = payload.getUnsignedByte();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_motor_status(){
        msgid = MAVLINK_MSG_ID_MOTOR_STATUS;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_motor_status(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_MOTOR_STATUS;
        unpack(mavLinkPacket.payload);        
    }

                                            
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_MOTOR_STATUS -"+" UDcBus:"+UDcBus+" IDcBus:"+IDcBus+" speed_cmd:"+speed_cmd+" speed:"+speed+" irsv1:"+irsv1+" irsv2:"+irsv2+" irsv3:"+irsv3+" irsv4:"+irsv4+" frsv1:"+frsv1+" frsv2:"+frsv2+" frsv3:"+frsv3+" frsv4:"+frsv4+" frsv5:"+frsv5+" frsv6:"+frsv6+" frsv7:"+frsv7+" frsv8:"+frsv8+" linked:"+linked+" eState:"+eState+" fault:"+fault+" alarm:"+alarm+"";
    }
}
        
