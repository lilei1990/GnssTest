/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE ALGORITHM_PARAM_DATA PACKING
package com.MAVLink.MAVLink.common;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* algorith param data
*/
public class msg_algorithm_param_data extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_ALGORITHM_PARAM_DATA = 150;
    public static final int MAVLINK_MSG_LENGTH = 104;
    private static final long serialVersionUID = MAVLINK_MSG_ID_ALGORITHM_PARAM_DATA;


      
    /**
    * device id
    */
    public long deviceid;
      
    /**
    * message id
    */
    public long index;
      
    /**
    * UNIX time (+8),yyyyMMddHHmmss,sample 2017.5.15 11:00:00, timestamp is 20170515110000
    */
    public long timestamp;
      
    /**
    * L1 period
    */
    public float L1_period;
      
    /**
    * L1 damping
    */
    public float L1_damping;
      
    /**
    * L1 xtrack i
    */
    public float L1_xtracki;
      
    /**
    * TAU
    */
    public float steer_tconst;
      
    /**
    * K_P
    */
    public float steer_p;
      
    /**
    * K_I
    */
    public float steer_i;
      
    /**
    * K_D
    */
    public float steer_d;
      
    /**
    * imax
    */
    public float steer_imax;
      
    /**
    * minispeed
    */
    public float steer_minspd;
      
    /**
    * angle max
    */
    public float steer_agmax;
      
    /**
    * omgth
    */
    public float steer_omgth;
      
    /**
    * thtth
    */
    public float steer_thtth;
      
    /**
    * 
    */
    public float xte_range;
      
    /**
    * 
    */
    public float xte_theta_range;
      
    /**
    * 
    */
    public float xte_p;
      
    /**
    * 
    */
    public float xte_i;
      
    /**
    * 
    */
    public float xte_d;
      
    /**
    * 
    */
    public float xte_imax;
      
    /**
    * 
    */
    public float xte_alpha;
      
    /**
    * 
    */
    public float xte_bea;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_ALGORITHM_PARAM_DATA;
              
        packet.payload.putUnsignedLong(deviceid);
              
        packet.payload.putUnsignedLong(index);
              
        packet.payload.putUnsignedLong(timestamp);
              
        packet.payload.putFloat(L1_period);
              
        packet.payload.putFloat(L1_damping);
              
        packet.payload.putFloat(L1_xtracki);
              
        packet.payload.putFloat(steer_tconst);
              
        packet.payload.putFloat(steer_p);
              
        packet.payload.putFloat(steer_i);
              
        packet.payload.putFloat(steer_d);
              
        packet.payload.putFloat(steer_imax);
              
        packet.payload.putFloat(steer_minspd);
              
        packet.payload.putFloat(steer_agmax);
              
        packet.payload.putFloat(steer_omgth);
              
        packet.payload.putFloat(steer_thtth);
              
        packet.payload.putFloat(xte_range);
              
        packet.payload.putFloat(xte_theta_range);
              
        packet.payload.putFloat(xte_p);
              
        packet.payload.putFloat(xte_i);
              
        packet.payload.putFloat(xte_d);
              
        packet.payload.putFloat(xte_imax);
              
        packet.payload.putFloat(xte_alpha);
              
        packet.payload.putFloat(xte_bea);
        
        return packet;
    }

    /**
    * Decode a algorithm_param_data message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.deviceid = payload.getUnsignedLong();
              
        this.index = payload.getUnsignedLong();
              
        this.timestamp = payload.getUnsignedLong();
              
        this.L1_period = payload.getFloat();
              
        this.L1_damping = payload.getFloat();
              
        this.L1_xtracki = payload.getFloat();
              
        this.steer_tconst = payload.getFloat();
              
        this.steer_p = payload.getFloat();
              
        this.steer_i = payload.getFloat();
              
        this.steer_d = payload.getFloat();
              
        this.steer_imax = payload.getFloat();
              
        this.steer_minspd = payload.getFloat();
              
        this.steer_agmax = payload.getFloat();
              
        this.steer_omgth = payload.getFloat();
              
        this.steer_thtth = payload.getFloat();
              
        this.xte_range = payload.getFloat();
              
        this.xte_theta_range = payload.getFloat();
              
        this.xte_p = payload.getFloat();
              
        this.xte_i = payload.getFloat();
              
        this.xte_d = payload.getFloat();
              
        this.xte_imax = payload.getFloat();
              
        this.xte_alpha = payload.getFloat();
              
        this.xte_bea = payload.getFloat();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_algorithm_param_data(){
        msgid = MAVLINK_MSG_ID_ALGORITHM_PARAM_DATA;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_algorithm_param_data(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_ALGORITHM_PARAM_DATA;
        unpack(mavLinkPacket.payload);        
    }

                                                  
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_ALGORITHM_PARAM_DATA -"+" deviceid:"+deviceid+" index:"+index+" timestamp:"+timestamp+" L1_period:"+L1_period+" L1_damping:"+L1_damping+" L1_xtracki:"+L1_xtracki+" steer_tconst:"+steer_tconst+" steer_p:"+steer_p+" steer_i:"+steer_i+" steer_d:"+steer_d+" steer_imax:"+steer_imax+" steer_minspd:"+steer_minspd+" steer_agmax:"+steer_agmax+" steer_omgth:"+steer_omgth+" steer_thtth:"+steer_thtth+" xte_range:"+xte_range+" xte_theta_range:"+xte_theta_range+" xte_p:"+xte_p+" xte_i:"+xte_i+" xte_d:"+xte_d+" xte_imax:"+xte_imax+" xte_alpha:"+xte_alpha+" xte_bea:"+xte_bea+"";
    }
}
        