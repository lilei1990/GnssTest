/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE CAMERA_INFORMATION PACKING
package com.MAVLink.MAVLink.common;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* WIP: Information about a camera
*/
public class msg_camera_information extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_CAMERA_INFORMATION = 259;
    public static final int MAVLINK_MSG_LENGTH = 86;
    private static final long serialVersionUID = MAVLINK_MSG_ID_CAMERA_INFORMATION;


      
    /**
    * Timestamp (milliseconds since system boot)
    */
    public long time_boot_ms;
      
    /**
    * Focal length in mm
    */
    public float focal_length;
      
    /**
    * Image sensor size horizontal in mm
    */
    public float sensor_size_h;
      
    /**
    * Image sensor size vertical in mm
    */
    public float sensor_size_v;
      
    /**
    * Image resolution in pixels horizontal
    */
    public int resolution_h;
      
    /**
    * Image resolution in pixels vertical
    */
    public int resolution_v;
      
    /**
    * Camera ID if there are multiple
    */
    public short camera_id;
      
    /**
    * Name of the camera vendor
    */
    public short vendor_name[] = new short[32];
      
    /**
    * Name of the camera model
    */
    public short model_name[] = new short[32];
      
    /**
    * Reserved for a lense ID
    */
    public short lense_id;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_CAMERA_INFORMATION;
              
        packet.payload.putUnsignedInt(time_boot_ms);
              
        packet.payload.putFloat(focal_length);
              
        packet.payload.putFloat(sensor_size_h);
              
        packet.payload.putFloat(sensor_size_v);
              
        packet.payload.putUnsignedShort(resolution_h);
              
        packet.payload.putUnsignedShort(resolution_v);
              
        packet.payload.putUnsignedByte(camera_id);
              
        
        for (int i = 0; i < vendor_name.length; i++) {
            packet.payload.putUnsignedByte(vendor_name[i]);
        }
                    
              
        
        for (int i = 0; i < model_name.length; i++) {
            packet.payload.putUnsignedByte(model_name[i]);
        }
                    
              
        packet.payload.putUnsignedByte(lense_id);
        
        return packet;
    }

    /**
    * Decode a camera_information message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.time_boot_ms = payload.getUnsignedInt();
              
        this.focal_length = payload.getFloat();
              
        this.sensor_size_h = payload.getFloat();
              
        this.sensor_size_v = payload.getFloat();
              
        this.resolution_h = payload.getUnsignedShort();
              
        this.resolution_v = payload.getUnsignedShort();
              
        this.camera_id = payload.getUnsignedByte();
              
         
        for (int i = 0; i < this.vendor_name.length; i++) {
            this.vendor_name[i] = payload.getUnsignedByte();
        }
                
              
         
        for (int i = 0; i < this.model_name.length; i++) {
            this.model_name[i] = payload.getUnsignedByte();
        }
                
              
        this.lense_id = payload.getUnsignedByte();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_camera_information(){
        msgid = MAVLINK_MSG_ID_CAMERA_INFORMATION;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_camera_information(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_CAMERA_INFORMATION;
        unpack(mavLinkPacket.payload);        
    }

                        
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_CAMERA_INFORMATION -"+" time_boot_ms:"+time_boot_ms+" focal_length:"+focal_length+" sensor_size_h:"+sensor_size_h+" sensor_size_v:"+sensor_size_v+" resolution_h:"+resolution_h+" resolution_v:"+resolution_v+" camera_id:"+camera_id+" vendor_name:"+vendor_name+" model_name:"+model_name+" lense_id:"+lense_id+"";
    }
}
        