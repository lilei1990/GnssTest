/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE AUTOPILOT_VERSION PACKING
package com.MAVLink.MAVLink.common;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* Version and capability of autopilot software
*/
public class msg_autopilot_version extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_AUTOPILOT_VERSION = 148;
    public static final int MAVLINK_MSG_LENGTH = 64;
    private static final long serialVersionUID = MAVLINK_MSG_ID_AUTOPILOT_VERSION;


      
    /**
    * version info
    */
    public short version[] = new short[32];
      
    /**
    * version create info
    */
    public short create_time[] = new short[32];
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_AUTOPILOT_VERSION;
              
        
        for (int i = 0; i < version.length; i++) {
            packet.payload.putUnsignedByte(version[i]);
        }
                    
              
        
        for (int i = 0; i < create_time.length; i++) {
            packet.payload.putUnsignedByte(create_time[i]);
        }
                    
        
        return packet;
    }

    /**
    * Decode a autopilot_version message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
         
        for (int i = 0; i < this.version.length; i++) {
            this.version[i] = payload.getUnsignedByte();
        }
                
              
         
        for (int i = 0; i < this.create_time.length; i++) {
            this.create_time[i] = payload.getUnsignedByte();
        }
                
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_autopilot_version(){
        msgid = MAVLINK_MSG_ID_AUTOPILOT_VERSION;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_autopilot_version(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_AUTOPILOT_VERSION;
        unpack(mavLinkPacket.payload);        
    }

        
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_AUTOPILOT_VERSION -"+" version:"+version+" create_time:"+create_time+"";
    }
}
        