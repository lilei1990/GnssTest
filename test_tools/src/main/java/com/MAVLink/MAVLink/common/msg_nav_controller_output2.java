/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE NAV_CONTROLLER_OUTPUT2 PACKING
package com.MAVLink.MAVLink.common;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* The state of the fixed wing navigation and position controller.
*/
public class msg_nav_controller_output2 extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_NAV_CONTROLLER_OUTPUT2 = 68;
    public static final int MAVLINK_MSG_LENGTH = 74;
    private static final long serialVersionUID = MAVLINK_MSG_ID_NAV_CONTROLLER_OUTPUT2;


      
    /**
    * Current desired roll in degrees
    */
    public float nav_roll;
      
    /**
    * Current desired pitch in degrees
    */
    public float nav_pitch;
      
    /**
    * Current altitude error in meters
    */
    public float alt_error;
      
    /**
    * Current airspeed error in meters/second
    */
    public float aspd_error;
      
    /**
    * Current crosstrack error on x-y plane in meters
    */
    public float xtrack_error;
      
    /**
    * Current L1 distance in meters
    */
    public float L1_dist;
      
    /**
    * Current L1 distance in meters
    */
    public float groundSpeed;
      
    /**
    * Current L1 distance in meters
    */
    public float AB_length;
      
    /**
    * Current L1 distance in meters
    */
    public float longitudinal_deviation;
      
    /**
    * Current L1 distance in meters
    */
    public float WP_A_dist;
      
    /**
    * Current L1 distance in meters
    */
    public float alongTrackDist;
      
    /**
    * Current L1 distance in meters
    */
    public float Nu;
      
    /**
    * Current L1 distance in meters
    */
    public float L1_xtrack_i;
      
    /**
    * Current L1 distance in meters
    */
    public float Nu1;
      
    /**
    * Current L1 distance in meters
    */
    public float Nu2;
      
    /**
    * Current L1 distance in meters
    */
    public float sine_Nu1;
      
    /**
    * Distance to active MISSION in meters
    */
    public int loc;
      
    /**
    * Current desired heading in degrees
    */
    public short nav_bearing;
      
    /**
    * Bearing to current MISSION/target in degrees
    */
    public short target_bearing;
      
    /**
    * Distance to active MISSION in meters
    */
    public int wp_dist;
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_NAV_CONTROLLER_OUTPUT2;
              
        packet.payload.putFloat(nav_roll);
              
        packet.payload.putFloat(nav_pitch);
              
        packet.payload.putFloat(alt_error);
              
        packet.payload.putFloat(aspd_error);
              
        packet.payload.putFloat(xtrack_error);
              
        packet.payload.putFloat(L1_dist);
              
        packet.payload.putFloat(groundSpeed);
              
        packet.payload.putFloat(AB_length);
              
        packet.payload.putFloat(longitudinal_deviation);
              
        packet.payload.putFloat(WP_A_dist);
              
        packet.payload.putFloat(alongTrackDist);
              
        packet.payload.putFloat(Nu);
              
        packet.payload.putFloat(L1_xtrack_i);
              
        packet.payload.putFloat(Nu1);
              
        packet.payload.putFloat(Nu2);
              
        packet.payload.putFloat(sine_Nu1);
              
        packet.payload.putInt(loc);
              
        packet.payload.putShort(nav_bearing);
              
        packet.payload.putShort(target_bearing);
              
        packet.payload.putUnsignedShort(wp_dist);
        
        return packet;
    }

    /**
    * Decode a nav_controller_output2 message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.nav_roll = payload.getFloat();
              
        this.nav_pitch = payload.getFloat();
              
        this.alt_error = payload.getFloat();
              
        this.aspd_error = payload.getFloat();
              
        this.xtrack_error = payload.getFloat();
              
        this.L1_dist = payload.getFloat();
              
        this.groundSpeed = payload.getFloat();
              
        this.AB_length = payload.getFloat();
              
        this.longitudinal_deviation = payload.getFloat();
              
        this.WP_A_dist = payload.getFloat();
              
        this.alongTrackDist = payload.getFloat();
              
        this.Nu = payload.getFloat();
              
        this.L1_xtrack_i = payload.getFloat();
              
        this.Nu1 = payload.getFloat();
              
        this.Nu2 = payload.getFloat();
              
        this.sine_Nu1 = payload.getFloat();
              
        this.loc = payload.getInt();
              
        this.nav_bearing = payload.getShort();
              
        this.target_bearing = payload.getShort();
              
        this.wp_dist = payload.getUnsignedShort();
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_nav_controller_output2(){
        msgid = MAVLINK_MSG_ID_NAV_CONTROLLER_OUTPUT2;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_nav_controller_output2(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_NAV_CONTROLLER_OUTPUT2;
        unpack(mavLinkPacket.payload);        
    }

                                            
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_NAV_CONTROLLER_OUTPUT2 -"+" nav_roll:"+nav_roll+" nav_pitch:"+nav_pitch+" alt_error:"+alt_error+" aspd_error:"+aspd_error+" xtrack_error:"+xtrack_error+" L1_dist:"+L1_dist+" groundSpeed:"+groundSpeed+" AB_length:"+AB_length+" longitudinal_deviation:"+longitudinal_deviation+" WP_A_dist:"+WP_A_dist+" alongTrackDist:"+alongTrackDist+" Nu:"+Nu+" L1_xtrack_i:"+L1_xtrack_i+" Nu1:"+Nu1+" Nu2:"+Nu2+" sine_Nu1:"+sine_Nu1+" loc:"+loc+" nav_bearing:"+nav_bearing+" target_bearing:"+target_bearing+" wp_dist:"+wp_dist+"";
    }
}
        